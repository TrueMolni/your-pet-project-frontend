{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0414\\u0430\\u0440\\u044C\\u044F\\\\Desktop\\\\GoIT\\\\node\\\\your-pet-project-frontend\\\\src\\\\modules\\\\AuthForm\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { InputForm } from 'modules/Input';\nimport Button from 'shared/components/Button/Button';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport css from './AuthForm.module.css';\nimport { ErrorMessage, Formik, Form } from 'formik';\nimport { user } from 'services';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: '',\n  password: ''\n};\n\nconst LoginForm = props => {\n  _s();\n\n  const [isError] = useState(null); //! setIsError\n\n  const [passwordShow, setPasswordShow] = useState(false);\n\n  const handleSubmit = async (formData, _ref) => {\n    let {\n      resetForm\n    } = _ref;\n    console.log('REGISTER FORM', formData); // const { error } = await login(formData);\n    // if (error) {\n    //   setIsError({\n    //     message: error.data.message,\n    //     additionalInfo: error.data.additionalInfo\n    //   });\n\n    resetForm(); // } else {\n    //   navigate('/user');\n    // }\n  };\n\n  const togglePassword = () => setPasswordShow(prevState => !prevState);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.container,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: user.loginValidationSchema,\n      initialValues: initialValues,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: css.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: css.title,\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.input__wrapper,\n          children: [/*#__PURE__*/_jsxDEV(InputForm, {\n            autofocus: \"autofocus\",\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"Email\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"p\",\n            className: css.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.input__wrapper_last,\n          children: [/*#__PURE__*/_jsxDEV(InputForm, {\n            name: \"password\",\n            type: passwordShow ? 'text' : 'password',\n            placeholder: \"Password\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"visibilityBtn\",\n            className: css.IconPassword,\n            onClick: togglePassword,\n            children: passwordShow ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"p\",\n            className: css.error__password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: css.button__auth,\n          buttonName: 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: css.error__login,\n          children: isError.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: css.error__login,\n          children: isError.additionalInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: css.redirect__auth,\n          children: ['Don`t have an account?', /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            className: css.redirect_link__auth,\n            children: 'Register'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"m/UqbmM12qcpFfCV6q7aHW85tH0=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Дарья/Desktop/GoIT/node/your-pet-project-frontend/src/modules/AuthForm/LoginForm.jsx"],"names":["InputForm","Button","VisibilityIcon","VisibilityOffIcon","css","ErrorMessage","Formik","Form","user","useState","Link","initialValues","email","password","LoginForm","props","isError","passwordShow","setPasswordShow","handleSubmit","formData","resetForm","console","log","togglePassword","prevState","container","loginValidationSchema","form","title","input__wrapper","error","input__wrapper_last","IconPassword","error__password","button__auth","error__login","message","additionalInfo","redirect__auth","redirect_link__auth"],"mappings":"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","sourcesContent":["import { InputForm } from 'modules/Input';\r\nimport Button from 'shared/components/Button/Button';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport css from './AuthForm.module.css';\r\nimport { ErrorMessage, Formik, Form } from 'formik';\r\nimport { user } from 'services';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst LoginForm = props => {\r\n  const [isError, ] = useState(null); //! setIsError\r\n  const [passwordShow, setPasswordShow] = useState(false);\r\n  const handleSubmit = async (formData, { resetForm }) => {\r\n    console.log('REGISTER FORM', formData);\r\n    // const { error } = await login(formData);\r\n    // if (error) {\r\n    //   setIsError({\r\n    //     message: error.data.message,\r\n    //     additionalInfo: error.data.additionalInfo\r\n    //   });\r\n    resetForm();\r\n    // } else {\r\n    //   navigate('/user');\r\n    // }\r\n  };\r\n\r\n  const togglePassword = () => setPasswordShow(prevState => !prevState);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <Formik\r\n        validationSchema={user.loginValidationSchema}\r\n        initialValues={initialValues}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Form className={css.form}>\r\n          <h2 className={css.title}>{props.title}</h2>\r\n          <div className={css.input__wrapper}>\r\n            <InputForm\r\n              autofocus=\"autofocus\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <ErrorMessage name=\"email\" component=\"p\" className={css.error} />\r\n          </div>\r\n          <div className={css.input__wrapper_last}>\r\n            <InputForm\r\n              name=\"password\"\r\n              type={passwordShow ? 'text' : 'password'}\r\n              placeholder=\"Password\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <span\r\n              id=\"visibilityBtn\"\r\n              className={css.IconPassword}\r\n              onClick={togglePassword}\r\n            >\r\n              {passwordShow ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </span>\r\n            <ErrorMessage\r\n              name=\"password\"\r\n              component=\"p\"\r\n              className={css.error__password}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            className={css.button__auth}\r\n            buttonName={'Login'}\r\n          ></Button>\r\n\r\n          {isError && <p className={css.error__login}>{isError.message}</p>}\r\n          {isError && (\r\n            <p className={css.error__login}>{isError.additionalInfo}</p>\r\n          )}\r\n\r\n          <p className={css.redirect__auth}>\r\n            {'Don`t have an account?'}\r\n            <Link to=\"/register\" className={css.redirect_link__auth}>\r\n              {'Register'}\r\n            </Link>\r\n          </p>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}