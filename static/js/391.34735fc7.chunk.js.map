{"version":3,"file":"static/js/391.34735fc7.chunk.js","mappings":"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","sources":["images/icons/sprite.svg","webpack://your-pet-project-frontend/./src/modules/Navigation/nav-container.module.css?b0ac","images/logo/logo.svg","webpack://your-pet-project-frontend/./src/modules/Navigation/Logo/Logo.module.css?4098","modules/Navigation/Logo/Logo.jsx","modules/Navigation/BurgerMenuBtn/BurgerMenuBtn.jsx","modules/Navigation/Nav/navItems.js","modules/Navigation/Nav/Navigation.jsx","modules/Navigation/UserNavigation/UserNavigation.jsx","modules/Navigation/AuthNavigation/PawIcon.jsx","modules/Navigation/AuthNavigation/AuthNavigation.jsx","webpack://your-pet-project-frontend/./src/pages/MenuPage/menu-page.module.css?7bce","pages/MenuPage/MenuPage.jsx","modules/Navigation/NavContainer.jsx","webpack://your-pet-project-frontend/./src/modules/SharedLayout/shared-layout.module.css?0d72","modules/SharedLayout/SharedLayout.jsx","shared/components/Button/ButtonNav.jsx","webpack://your-pet-project-frontend/./src/modules/Navigation/AuthNavigation/auth-navigation.module.css?e9be","../node_modules/nanoid/index.browser.js"],"sourcesContent":["var _symbol, _symbol2, _symbol3, _symbol4, _symbol5, _symbol6, _symbol7, _symbol8, _symbol9, _symbol10, _symbol11, _symbol12, _symbol13, _symbol14, _symbol15, _symbol16, _symbol17, _symbol18, _symbol19, _symbol20, _symbol21, _symbol22, _symbol23, _symbol24, _symbol25, _symbol26, _symbol27, _symbol28;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\",\n      fill: \"none\"\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"arrow-left\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M4 12h16M4 12l6-6m-6 6 6 6\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"camera\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M12 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M3 9a2 2 0 0 1 2-2h2.5a1 1 0 0 0 1-1 1 1 0 0 1 1-1h5a1 1 0 0 1 1 1 1 1 0 0 0 1 1H19a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z\"\n  }))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"check-round\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"m17 9-7 7-3-3m1 7h8a4 4 0 0 0 4-4V8a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v8a4 4 0 0 0 4 4Z\"\n  }))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"check\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M20 7 9 18l-5-5\"\n  }))), _symbol5 || (_symbol5 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"arrow-down\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"m4 9 8 8 8-8\"\n  }))), _symbol6 || (_symbol6 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"arrow-up\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"m20 15-8-8-8 8\"\n  }))), _symbol7 || (_symbol7 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"clock\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M12.758 7v5l3 3m6-3a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }))), _symbol8 || (_symbol8 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"cross-small\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"m16 8-8 8m0-8 8 8\"\n  }))), _symbol9 || (_symbol9 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"cross\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M19 5 5 19M5 5l14 14\"\n  }))), _symbol10 || (_symbol10 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"close\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#ffc107\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M19 5 5 19M5 5l14 14\"\n  }))), _symbol11 || (_symbol11 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"edit\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#54ADFF\",\n    d: \"m5 15.706-.53-.53a.75.75 0 0 0-.22.53H5ZM15.706 5l.53-.53a.75.75 0 0 0-1.06 0l.53.53ZM19 8.294l.53.53a.75.75 0 0 0 0-1.06l-.53.53ZM8.294 19v.75a.75.75 0 0 0 .53-.22l-.53-.53ZM5 19h-.75c0 .414.336.75.75.75V19Zm6.588-.75a.75.75 0 0 0 0 1.5v-1.5Zm7 1.5a.75.75 0 0 0 0-1.5v1.5ZM5.53 16.236 16.236 5.53l-1.06-1.06L4.47 15.176l1.06 1.06ZM15.176 5.53l3.294 3.294 1.06-1.06-3.294-3.294-1.06 1.06Zm3.294 2.234L7.764 18.47l1.06 1.06L19.53 8.824l-1.06-1.06ZM8.294 18.25H5v1.5h3.294v-1.5ZM5.75 19v-3.294h-1.5V19h1.5Zm6.955-11 3.294 3.295 1.06-1.06-3.293-3.295L12.705 8Zm-1.117 11.75h7v-1.5h-7v1.5Z\"\n  }))), _symbol12 || (_symbol12 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"eye-closed\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M9.764 5.295A8.618 8.618 0 0 1 12 5c6.364 0 10 7 10 7s-.829 1.596-2.388 3.264M4.349 8.777C2.815 10.431 2 12 2 12s3.636 7 10 7a8.62 8.62 0 0 0 2.274-.306M11.5 14.96A3.004 3.004 0 0 1 9.17 13m3.33-3.959a3.002 3.002 0 0 1 2.459 2.459M3 3l18 18\"\n  }))), _symbol13 || (_symbol13 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"eye-open\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M2 12s3.636-7 10-7 10 7 10 7-3.636 7-10 7-10-7-10-7Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"\n  }))), _symbol14 || (_symbol14 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"female\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M12.758 13a5 5 0 1 0 0-10 5 5 0 0 0 0 10Zm0 0v8m-3-3h6\"\n  }))), _symbol15 || (_symbol15 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"filters\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeWidth: 1.5,\n    d: \"M14 5a2 2 0 1 0-4 0m4 0a2 2 0 1 1-4 0m4 0h6M10 5H4m12 7a2 2 0 1 0 4 0 2 2 0 0 0-4 0Zm0 0H4m4 7a2 2 0 1 0-4 0 2 2 0 0 0 4 0Zm0 0h12\"\n  }))), _symbol16 || (_symbol16 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"filters-1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"m4.758 4 5 8v6l6 3v-9l5-8h-16Z\"\n  }))), _symbol17 || (_symbol17 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"heart\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M4.331 12.047 12 20l7.669-7.953A4.804 4.804 0 0 0 21 8.714C21 6.111 18.965 4 16.454 4a4.465 4.465 0 0 0-3.214 1.38L12 6.668 10.76 5.38A4.465 4.465 0 0 0 7.546 4C5.036 4 3 6.11 3 8.714c0 1.25.479 2.45 1.331 3.333Z\"\n  }))), _symbol18 || (_symbol18 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"location\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M20.758 11c0 4.418-3.582 8-8 10-4.418-2-8-5.582-8-10a8 8 0 1 1 16 0Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M15.758 11a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }))), _symbol19 || (_symbol19 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"logout\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M14 4h4a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-4M3 12h12M3 12l4-4m-4 4 4 4\"\n  }))), _symbol20 || (_symbol20 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"male\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M12.758 11a5 5 0 1 0 0 10 5 5 0 0 0 0-10Zm0 0V3m0 0 4 4m-4-4-4 4\"\n  }))), _symbol21 || (_symbol21 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"menu-hamburger\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#ffc107\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M4 7h16M4 12h16M4 17h16\"\n  }))), _symbol22 || (_symbol22 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"pawprint\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#54ADFF\",\n    clipPath: \"url(#clip0_31009_547)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.361 14.362a5.82 5.82 0 0 0-3.322-4.518 5.82 5.82 0 0 0-5.596.36l-4.074 2.579a3.675 3.675 0 0 0-1.473 1.795 3.674 3.674 0 0 0-.113 2.32 3.675 3.675 0 0 0 1.294 1.93c.631.491 1.388.76 2.189.778l.052.001a7.271 7.271 0 0 1 5.24 2.467 3.68 3.68 0 0 0 2.002 1.177 3.675 3.675 0 0 0 2.31-.25 3.675 3.675 0 0 0 1.705-1.577c.388-.7.536-1.49.43-2.283l-.644-4.779Zm-2.074 7.359c-.927.421-2 .19-2.672-.575a8.662 8.662 0 0 0-2.85-2.136 8.662 8.662 0 0 0-3.467-.81l-.035-.001a2.28 2.28 0 0 1-2.124-1.677 2.28 2.28 0 0 1 .982-2.55l4.075-2.58a4.418 4.418 0 0 1 4.249-.273 4.419 4.419 0 0 1 2.522 3.43l.643 4.78a2.28 2.28 0 0 1-1.323 2.392ZM4.721 9.395c.828.058 1.624-.259 2.244-.892.59-.602.948-1.426 1.01-2.318.06-.892-.182-1.757-.682-2.435-.527-.711-1.272-1.135-2.099-1.192-1.662-.115-3.12 1.325-3.252 3.211-.103 1.502.668 2.84 1.825 3.38.296.137.617.223.954.246Zm-1.375-3.53c.077-1.11.863-1.965 1.752-1.903.16.01.316.052.463.12.227.106.432.277.6.505.303.409.448.942.41 1.501-.039.56-.256 1.067-.612 1.431-.326.333-.731.501-1.14.473-.889-.061-1.55-1.015-1.473-2.126ZM10.641 8.647c1.762.821 3.957-.143 4.893-2.15.936-2.008.264-4.31-1.498-5.131-1.761-.822-3.956.143-4.892 2.15-.936 2.008-.264 4.31 1.497 5.13Zm2.801-6.006c1.059.493 1.425 1.956.817 3.261-.608 1.304-1.965 1.963-3.023 1.47-1.059-.494-1.425-1.957-.817-3.26.608-1.305 1.964-1.965 3.023-1.471ZM15.744 12.114c.229.216.485.388.76.517 1.285.599 2.974.248 4.122-.967.66-.699 1.05-1.582 1.097-2.486.05-.947-.278-1.804-.923-2.413-.644-.608-1.518-.888-2.46-.785-.901.098-1.76.536-2.421 1.236-1.394 1.474-1.472 3.672-.175 4.898Zm1.197-3.932c.432-.457.982-.742 1.55-.804.526-.057 1.003.089 1.343.41.34.32.512.789.484 1.317-.03.57-.283 1.136-.715 1.593-.86.91-2.159 1.088-2.893.394-.733-.694-.63-2 .231-2.91ZM22.67 14.827c-.797-1.465-2.795-1.923-4.456-1.022-1.66.902-2.363 2.827-1.569 4.29.29.535.74.935 1.274 1.185.933.435 2.125.411 3.181-.162 1.66-.902 2.364-2.827 1.57-4.291Zm-2.24 3.055c-.98.531-2.124.326-2.548-.457-.425-.783.026-1.852 1.004-2.384.65-.353 1.372-.38 1.909-.13.271.126.496.324.639.587.424.783-.027 1.852-1.005 2.384Z\"\n  })), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_31009_547\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M0 0h24v24H0z\"\n  })))), _symbol23 || (_symbol23 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"paw-white\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_31009_547)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.361 14.362a5.82 5.82 0 0 0-3.322-4.518 5.82 5.82 0 0 0-5.596.36l-4.074 2.579a3.675 3.675 0 0 0-1.473 1.795 3.674 3.674 0 0 0-.113 2.32 3.675 3.675 0 0 0 1.294 1.93c.631.491 1.388.76 2.189.778l.052.001a7.271 7.271 0 0 1 5.24 2.467 3.68 3.68 0 0 0 2.002 1.177 3.675 3.675 0 0 0 2.31-.25 3.675 3.675 0 0 0 1.705-1.577c.388-.7.536-1.49.43-2.283l-.644-4.779Zm-2.074 7.359c-.927.421-2 .19-2.672-.575a8.662 8.662 0 0 0-2.85-2.136 8.662 8.662 0 0 0-3.467-.81l-.035-.001a2.28 2.28 0 0 1-2.124-1.677 2.28 2.28 0 0 1 .982-2.55l4.075-2.58a4.418 4.418 0 0 1 4.249-.273 4.419 4.419 0 0 1 2.522 3.43l.643 4.78a2.28 2.28 0 0 1-1.323 2.392ZM4.721 9.395c.828.058 1.624-.259 2.244-.892.59-.602.948-1.426 1.01-2.318.06-.892-.182-1.757-.682-2.435-.527-.711-1.272-1.135-2.099-1.192-1.662-.115-3.12 1.325-3.252 3.211-.103 1.502.668 2.84 1.825 3.38.296.137.617.223.954.246Zm-1.375-3.53c.077-1.11.863-1.965 1.752-1.903.16.01.316.052.463.12.227.106.432.277.6.505.303.409.448.942.41 1.501-.039.56-.256 1.067-.612 1.431-.326.333-.731.501-1.14.473-.889-.061-1.55-1.015-1.473-2.126ZM10.641 8.647c1.762.821 3.957-.143 4.893-2.15.936-2.008.264-4.31-1.498-5.131-1.761-.822-3.956.143-4.892 2.15-.936 2.008-.264 4.31 1.497 5.13Zm2.801-6.006c1.059.493 1.425 1.956.817 3.261-.608 1.304-1.965 1.963-3.023 1.47-1.059-.494-1.425-1.957-.817-3.26.608-1.305 1.964-1.965 3.023-1.471ZM15.744 12.114c.229.216.485.388.76.517 1.285.599 2.974.248 4.122-.967.66-.699 1.05-1.582 1.097-2.486.05-.947-.278-1.804-.923-2.413-.644-.608-1.518-.888-2.46-.785-.901.098-1.76.536-2.421 1.236-1.394 1.474-1.472 3.672-.175 4.898Zm1.197-3.932c.432-.457.982-.742 1.55-.804.526-.057 1.003.089 1.343.41.34.32.512.789.484 1.317-.03.57-.283 1.136-.715 1.593-.86.91-2.159 1.088-2.893.394-.733-.694-.63-2 .231-2.91ZM22.67 14.827c-.797-1.465-2.795-1.923-4.456-1.022-1.66.902-2.363 2.827-1.569 4.29.29.535.74.935 1.274 1.185.933.435 2.125.411 3.181-.162 1.66-.902 2.364-2.827 1.57-4.291Zm-2.24 3.055c-.98.531-2.124.326-2.548-.457-.425-.783.026-1.852 1.004-2.384.65-.353 1.372-.38 1.909-.13.271.126.496.324.639.587.424.783-.027 1.852-1.005 2.384Z\"\n  })), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_31009_547\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M0 0h24v24H0z\"\n  })))), _symbol24 || (_symbol24 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"plus-small\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M12 7v10m-5-5h10\"\n  }))), _symbol25 || (_symbol25 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"plus\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeWidth: 2,\n    d: \"M12 20v-8m0 0V4m0 8h8m-8 0H4\"\n  }))), _symbol26 || (_symbol26 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"round\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M4 8a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H8a4 4 0 0 1-4-4V8Z\"\n  }))), _symbol27 || (_symbol27 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"search\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#54ADFF\",\n    d: \"M19.47 20.53a.75.75 0 1 0 1.06-1.06l-1.06 1.06ZM17.25 10.5a6.75 6.75 0 0 1-6.75 6.75v1.5a8.25 8.25 0 0 0 8.25-8.25h-1.5Zm-6.75 6.75a6.75 6.75 0 0 1-6.75-6.75h-1.5a8.25 8.25 0 0 0 8.25 8.25v-1.5ZM3.75 10.5a6.75 6.75 0 0 1 6.75-6.75v-1.5a8.25 8.25 0 0 0-8.25 8.25h1.5Zm6.75-6.75a6.75 6.75 0 0 1 6.75 6.75h1.5a8.25 8.25 0 0 0-8.25-8.25v1.5Zm10.03 15.72-4.187-4.188-1.06 1.06 4.187 4.188 1.06-1.06Z\"\n  }))), _symbol28 || (_symbol28 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"trash\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M18 6v12a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V6m9 0V5a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v1M4 6h16m-10 4v6m4-6v6\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"user\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#ffc107\",\n    style: {\n      stroke: \"var(--color1, #ffc107)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.7143,\n    d: \"M25.143 27.429v-2.286c0-2.525-2.047-4.571-4.571-4.571h-9.143c-2.525 0-4.571 2.047-4.571 4.571v2.286M20.571 11.429c0 2.525-2.047 4.571-4.571 4.571s-4.571-2.047-4.571-4.571c0-2.525 2.047-4.571 4.571-4.571s4.571 2.047 4.571 4.571z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#ffc107\",\n    style: {\n      stroke: \"var(--color1, #ffc107)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.7143,\n    d: \"M16 0.857c8.363 0 15.143 6.78 15.143 15.143s-6.78 15.143-15.143 15.143c-8.363 0-15.143-6.78-15.143-15.143s6.78-15.143 15.143-15.143z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.ea67adcb241711fe9b4a0f1b20ef5d17.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"headerContainer\":\"nav-container_headerContainer__gC4n9\",\"navContainer\":\"nav-container_navContainer__nKDs1\",\"navList\":\"nav-container_navList__slVWw\",\"navLink\":\"nav-container_navLink__F7Ovv\",\"authNavList\":\"nav-container_authNavList__xYqel\",\"userIconContainer\":\"nav-container_userIconContainer__M5jkq\",\"userName\":\"nav-container_userName__0P0Ue\",\"burgerMenu\":\"nav-container_burgerMenu__eApW0\"};","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 162,\n    height: 28,\n    viewBox: \"0 0 162 28\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.34375 25.6875C1.51042 25.4375 0.395833 24.4688 0 22.7812L0.03125 22.4375C0.114583 22.1875 0.208333 21.9062 0.3125 21.5938C0.416667 21.2396 0.53125 20.8958 0.65625 20.5625C0.78125 20.2083 0.989583 19.8958 1.28125 19.625C1.34375 19.4375 1.45833 19.1562 1.625 18.7812C1.8125 18.3854 2.11458 17.8021 2.53125 17.0312C2.86458 16.4271 3.125 15.9479 3.3125 15.5938C3.52083 15.2396 3.6875 14.9688 3.8125 14.7812C3.60417 14.4062 3.3125 14.0417 2.9375 13.6875C2.60417 13.0625 2.3125 12.4688 2.0625 11.9062C1.83333 11.3229 1.65625 10.8021 1.53125 10.3438C1.51042 9.84375 1.42708 9.33333 1.28125 8.8125C1.21875 8.54167 1.15625 8.27083 1.09375 8C1.03125 7.72917 1 7.44792 1 7.15625C0.916667 7.01042 0.84375 6.82292 0.78125 6.59375L0.84375 6.21875C0.947917 6.05208 0.96875 5.83333 0.90625 5.5625C0.864583 5.27083 0.802083 4.97917 0.71875 4.6875C0.65625 4.41667 0.59375 4.13542 0.53125 3.84375C0.489583 3.53125 0.479167 3.22917 0.5 2.9375C0.520833 2.64583 0.59375 2.36458 0.71875 2.09375C0.864583 1.82292 1.10417 1.59375 1.4375 1.40625L1.75 1.1875L2.0625 1.375C2.29167 1.52083 2.51042 1.64583 2.71875 1.75C2.92708 1.85417 3.13542 1.95833 3.34375 2.0625C3.59375 2.1875 3.84375 2.32292 4.09375 2.46875C4.34375 2.59375 4.61458 2.73958 4.90625 2.90625L5.21875 3.125L5.1875 3.46875C5.1875 3.51042 5.19792 3.5625 5.21875 3.625C5.23958 3.6875 5.27083 3.73958 5.3125 3.78125L5.65625 3.875L5.6875 4.3125V4.6875C5.6875 4.875 5.69792 5.01042 5.71875 5.09375C5.73958 5.15625 5.78125 5.22917 5.84375 5.3125L6 5.71875C6 6.09375 6.03125 6.42708 6.09375 6.71875C6.15625 7.01042 6.22917 7.30208 6.3125 7.59375C6.41667 7.88542 6.5 8.1875 6.5625 8.5C6.625 8.79167 6.63542 9.11458 6.59375 9.46875C6.71875 9.40625 6.84375 9.3125 6.96875 9.1875C7.01042 9.14583 7.05208 9.10417 7.09375 9.0625C7.15625 9.02083 7.21875 8.97917 7.28125 8.9375L9.46875 5.96875L9.40625 5.59375L10.1875 4.84375C10.3958 4.67708 10.5938 4.51042 10.7812 4.34375C10.9688 4.15625 11.125 3.94792 11.25 3.71875L11.4375 3.4375C12.375 2.1875 13.5833 1.41667 15.0625 1.125L15.5938 1L15.75 1.5C15.8542 1.79167 16.0521 2.05208 16.3438 2.28125C16.6562 2.48958 16.9896 2.69792 17.3438 2.90625L17.6875 3.125C17.8125 3.375 17.875 3.5625 17.875 3.6875C17.875 3.8125 17.8646 3.91667 17.8438 4L18 4.40625C17.7708 5.01042 17.5208 5.44792 17.25 5.71875C16.9792 5.96875 16.6979 6.20833 16.4062 6.4375C16.1771 6.625 15.9688 6.8125 15.7812 7C15.5938 7.1875 15.4479 7.39583 15.3438 7.625L15.0938 7.9375C14.5729 8.20833 14.2396 8.60417 14.0938 9.125L13.9688 9.5625H13.5C13.4792 9.5625 13.4271 9.61458 13.3438 9.71875C13.2604 9.80208 13.1354 10.0208 12.9688 10.375C12.7812 10.625 12.6458 10.7917 12.5625 10.875C12.5 10.9375 12.4479 10.9896 12.4062 11.0312C12.3646 11.1354 12.3229 11.2292 12.2812 11.3125C12.2604 11.3958 12.2292 11.5 12.1875 11.625L12 11.875C11.8125 12.0417 11.6771 12.2083 11.5938 12.375C11.5104 12.5208 11.4167 12.6979 11.3125 12.9062C11.2292 13.0938 11.1354 13.2917 11.0312 13.5C10.9271 13.6875 10.7812 13.875 10.5938 14.0625L10.6562 14.4062L10.4062 14.625C10.2396 14.7708 10.0938 14.9583 9.96875 15.1875C9.84375 15.3958 9.71875 15.6146 9.59375 15.8438C9.46875 16.0938 9.33333 16.3438 9.1875 16.5938C9.04167 16.8438 8.85417 17.0729 8.625 17.2812C8.47917 17.6562 8.34375 17.9479 8.21875 18.1562C8.11458 18.3646 7.92708 18.6146 7.65625 18.9062C7.40625 19.9062 6.8125 20.9792 5.875 22.125C5.85417 22.3542 5.78125 22.5833 5.65625 22.8125C5.55208 23.0208 5.4375 23.2188 5.3125 23.4062C5.27083 23.4896 5.21875 23.5833 5.15625 23.6875C5.11458 23.7708 5.08333 23.8333 5.0625 23.875L4.96875 24.2188C4.84375 24.4479 4.70833 24.6354 4.5625 24.7812C4.4375 24.9271 4.3125 25.0625 4.1875 25.1875C4.125 25.2292 4.0625 25.2812 4 25.3438C3.95833 25.4062 3.91667 25.4583 3.875 25.5L3.34375 25.6875Z\",\n    fill: \"#303030\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.5575 6.875C66.5992 7.33333 66.6721 7.72917 66.7762 8.0625C66.8804 8.39583 66.995 8.71875 67.12 9.03125C67.2242 9.32292 67.3179 9.61458 67.4012 9.90625C67.5054 10.1771 67.5783 10.5104 67.62 10.9062C67.4533 11.4479 67.3283 11.9479 67.245 12.4062C67.1825 12.8646 67.1096 13.3438 67.0262 13.8438C66.6929 14.5729 66.37 15.2188 66.0575 15.7812C65.745 16.3438 65.495 16.8333 65.3075 17.25C65.2033 17.3542 65.1096 17.4792 65.0262 17.625C64.9637 17.75 64.8908 17.8854 64.8075 18.0312C64.7658 18.0938 64.7137 18.1875 64.6512 18.3125C64.5887 18.4375 64.5367 18.5208 64.495 18.5625L63.87 18.3438L63.745 19.125L63.3075 19.25L62.995 19.625C62.5992 20.3125 62.1825 20.8958 61.745 21.375C61.3075 21.8333 60.8075 22.25 60.245 22.625C59.7033 22.9792 59.0783 23.3125 58.37 23.625C57.6825 23.9375 56.9012 24.2812 56.0262 24.6562C55.6721 24.6146 55.3596 24.5938 55.0887 24.5938C54.8387 24.5729 54.5992 24.5521 54.37 24.5312C53.9742 24.5312 53.4846 24.5 52.9012 24.4375C52.8387 24.2708 52.745 24.1562 52.62 24.0938C52.495 24.0312 52.3804 24 52.2762 24C51.9221 23.8333 51.6512 23.5938 51.4637 23.2812C51.2971 22.9479 51.1304 22.5938 50.9637 22.2188C50.8596 21.9896 50.7554 21.7812 50.6512 21.5938C50.5471 21.3854 50.4325 21.1771 50.3075 20.9688L50.8387 20.8125L50.1512 20.0625C50.1096 20 50.0575 19.9479 49.995 19.9062C49.9325 19.8438 49.8804 19.7812 49.8387 19.7188L49.8075 19.2188C49.745 17.7812 49.7137 16.4688 49.7137 15.2812C49.7346 14.0729 49.9012 13 50.2137 12.0625V11.7188C50.2762 11.2604 50.3387 10.8854 50.4012 10.5938C50.4637 10.2812 50.5158 9.98958 50.5575 9.71875C50.62 9.26042 50.7137 8.83333 50.8387 8.4375C51.1304 8.375 51.3492 8.26042 51.495 8.09375C51.6408 7.90625 51.7658 7.73958 51.87 7.59375C52.1617 7.57292 52.3596 7.61458 52.4637 7.71875C52.5679 7.82292 52.6721 7.98958 52.7762 8.21875C52.8804 8.40625 53.0054 8.61458 53.1512 8.84375C53.3179 9.07292 53.5575 9.25 53.87 9.375C53.9117 9.54167 53.9637 9.71875 54.0262 9.90625C54.1096 10.0729 54.1929 10.2604 54.2762 10.4688C54.4429 10.8229 54.5887 11.1979 54.7137 11.5938C54.8596 11.9688 54.9429 12.3333 54.9637 12.6875C54.7554 13.0833 54.5887 13.5417 54.4637 14.0625C54.3596 14.5833 54.2867 15.1146 54.245 15.6562C54.2242 16.1771 54.2346 16.6875 54.2762 17.1875C54.3387 17.6667 54.4325 18.0729 54.5575 18.4062L54.745 18.8125L55.2762 18.75C55.9012 18.5833 56.4637 18.4062 56.9637 18.2188C57.4846 18.0104 57.9637 17.7708 58.4012 17.5C58.8387 17.2292 59.2554 16.9167 59.6512 16.5625C60.0471 16.1875 60.4637 15.7604 60.9012 15.2812C61.3387 14.8021 61.7137 14.2604 62.0262 13.6562C62.3596 13.0312 62.6304 12.3854 62.8387 11.7188C63.0679 11.0521 63.2346 10.3958 63.3387 9.75C63.4637 9.08333 63.5471 8.45833 63.5887 7.875C63.9429 7.75 64.12 7.5 64.12 7.125L64.0575 6.78125C63.9742 6.65625 63.9742 6.51042 64.0575 6.34375C64.1825 5.94792 64.4742 5.64583 64.9325 5.4375C65.2658 5.64583 65.5575 5.875 65.8075 6.125C66.0783 6.375 66.3283 6.625 66.5575 6.875Z\",\n    fill: \"#303030\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73.15 21.4062C72.9208 22.2396 72.7125 22.875 72.525 23.3125C72.3583 23.7292 72.0979 24.1667 71.7438 24.625C71.4729 24.5833 71.2854 24.6146 71.1813 24.7188C71.0771 24.8229 70.9625 24.9167 70.8375 25C70.65 25.0417 70.5146 25.0417 70.4313 25C70.3479 24.9583 70.275 24.9062 70.2125 24.8438C70.15 24.8021 70.0667 24.75 69.9625 24.6875C69.8792 24.6458 69.7438 24.625 69.5563 24.625C69.5146 24.4583 69.4625 24.3021 69.4 24.1562C69.3583 24.0104 69.2229 23.9583 68.9938 24C69.0354 23.8333 69.0458 23.6979 69.025 23.5938C69.0042 23.4688 68.9729 23.3646 68.9313 23.2812C68.9104 23.1771 68.8896 23.0833 68.8688 23C68.8479 22.8958 68.8583 22.7708 68.9 22.625C68.7958 22.625 68.7125 22.5521 68.65 22.4062C68.5875 22.2604 68.5146 22.1146 68.4313 21.9688C68.4938 21.5938 68.5563 21.2396 68.6188 20.9062C68.6813 20.5729 68.7542 20.2604 68.8375 19.9688C68.9417 19.6771 69.025 19.3854 69.0875 19.0938C69.15 18.8021 69.1188 18.5 68.9938 18.1875C69.0771 18.25 69.1396 18.2396 69.1813 18.1562C69.2229 18.0521 69.2542 17.9271 69.275 17.7812C69.2958 17.6146 69.3063 17.4583 69.3063 17.3125C69.3063 17.1458 69.2958 17.0104 69.275 16.9062C69.4833 16.3646 69.65 15.8125 69.775 15.25C69.9208 14.6667 70.0458 14.0938 70.15 13.5312C70.275 12.9688 70.4 12.4167 70.525 11.875C70.65 11.3333 70.8167 10.8333 71.025 10.375C71.2542 10.3333 71.5042 10.3646 71.775 10.4688C72.0667 10.5521 72.2438 10.6667 72.3063 10.8125C72.8479 10.3958 73.3271 9.89583 73.7438 9.3125C74.1604 8.70833 74.5875 8.125 75.025 7.5625C75.4625 7 75.9417 6.5 76.4625 6.0625C77.0042 5.625 77.6813 5.36458 78.4938 5.28125C78.9104 5.59375 79.3688 5.91667 79.8688 6.25C80.3896 6.5625 80.8167 6.97917 81.15 7.5C81.3167 7.58333 81.4521 7.67708 81.5563 7.78125C81.6813 7.86458 81.8271 7.95833 81.9938 8.0625V8.4375C82.2438 8.66667 82.4417 8.9375 82.5875 9.25C82.7542 9.54167 82.9 9.86458 83.025 10.2188C83.15 10.5521 83.275 10.8958 83.4 11.25C83.525 11.5833 83.6708 11.9062 83.8375 12.2188C83.7958 12.3229 83.775 12.4167 83.775 12.5C83.775 12.5625 83.7854 12.6354 83.8063 12.7188C83.8479 12.8021 83.8792 12.8854 83.9 12.9688C83.9208 13.0521 83.9208 13.1667 83.9 13.3125C83.8375 14.2292 83.5354 14.9688 82.9938 15.5312C82.4729 16.0938 81.8375 16.5625 81.0875 16.9375C80.3375 17.2917 79.5354 17.5938 78.6813 17.8438C77.8271 18.0938 77.0563 18.3646 76.3688 18.6562C76.3688 18.7396 76.4 18.7812 76.4625 18.7812C76.5458 18.7812 76.5771 18.8333 76.5563 18.9375C77.0563 19.25 77.4521 19.5 77.7438 19.6875C78.0354 19.875 78.3063 20.0312 78.5563 20.1562C78.8271 20.2812 79.1083 20.3958 79.4 20.5C79.7125 20.5833 80.1396 20.6875 80.6813 20.8125C81.2229 20.9375 81.6396 21.0417 81.9313 21.125C82.2438 21.1875 82.525 21.25 82.775 21.3125C83.025 21.3542 83.275 21.3958 83.525 21.4375C83.7958 21.4583 84.1708 21.4896 84.65 21.5312C84.8375 21.7188 84.9938 21.9479 85.1188 22.2188C85.2646 22.4688 85.3583 22.7292 85.4 23C85.4417 23.25 85.4521 23.5 85.4313 23.75C85.4104 23.9792 85.3375 24.1667 85.2125 24.3125C85.2333 24.375 85.275 24.4062 85.3375 24.4062C85.4208 24.3854 85.5042 24.3854 85.5875 24.4062C85.4625 24.4896 85.3583 24.5938 85.275 24.7188C85.1917 24.8438 85.1083 24.9688 85.025 25.0938C84.9417 25.2188 84.8479 25.3229 84.7438 25.4062C84.6396 25.5104 84.4938 25.5729 84.3063 25.5938C83.6604 25.8438 82.8479 25.8542 81.8688 25.625C80.8896 25.4167 79.65 25.0208 78.15 24.4375C77.4 24.1458 76.7854 23.8958 76.3063 23.6875C75.8479 23.4583 75.4417 23.2396 75.0875 23.0312C74.7542 22.8021 74.4417 22.5625 74.15 22.3125C73.8792 22.0625 73.5458 21.7604 73.15 21.4062ZM77.6188 10.6875C77.3896 11.0208 77.1292 11.3229 76.8375 11.5938C76.5667 11.8646 76.2958 12.1458 76.025 12.4375C75.775 12.7083 75.5458 13.0208 75.3375 13.375C75.1292 13.7083 74.9833 14.1042 74.9 14.5625C75.6292 14.4792 76.3896 14.2812 77.1813 13.9688C77.9729 13.6354 78.7229 13.3229 79.4313 13.0312C79.3479 12.3854 79.1188 11.8646 78.7438 11.4688C78.3896 11.0729 78.0146 10.8125 77.6188 10.6875Z\",\n    fill: \"#303030\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M100.516 16.499C100.539 16.4092 100.583 16.3755 100.651 16.3979C100.741 16.3979 100.819 16.3867 100.887 16.3643C100.707 16.1846 100.595 15.9487 100.55 15.6567C100.505 15.3423 100.393 15.084 100.213 14.8818C100.258 14.7695 100.292 14.6572 100.314 14.5449C100.359 14.4326 100.46 14.3877 100.617 14.4102C100.55 13.916 100.561 13.4556 100.651 13.0288C100.741 12.6021 100.875 12.1978 101.055 11.8159C101.257 11.4341 101.482 11.0635 101.729 10.7041C101.999 10.3223 102.257 9.94043 102.504 9.55859C102.706 9.51367 102.83 9.53613 102.875 9.62598C102.919 9.69336 102.998 9.6709 103.11 9.55859C103.47 9.31152 103.717 9.04199 103.852 8.75C103.986 8.43555 104.054 8.09863 104.054 7.73926C104.256 7.15527 104.48 6.58252 104.728 6.021C104.997 5.43701 105.3 4.89795 105.637 4.40381C105.974 3.90967 106.333 3.48291 106.715 3.12354C107.097 2.7417 107.513 2.44971 107.962 2.24756C108.276 1.97803 108.669 1.73096 109.141 1.50635C109.635 1.28174 110.152 1.11328 110.691 1.00098C111.252 0.866211 111.825 0.798828 112.409 0.798828C112.993 0.776367 113.532 0.83252 114.026 0.967285C114.139 1.01221 114.206 0.989746 114.229 0.899902C114.251 0.787598 114.307 0.731445 114.397 0.731445C115.52 0.866211 116.52 1.09082 117.396 1.40527C118.294 1.71973 119.058 2.15771 119.687 2.71924C120.113 3.39307 120.518 4.12305 120.899 4.90918C121.281 5.67285 121.573 6.48145 121.775 7.33496C122 8.16602 122.101 9.03076 122.079 9.9292C122.056 10.8276 121.865 11.7261 121.506 12.6245C120.72 13.6128 119.765 14.4102 118.642 15.0166C117.519 15.6006 116.306 16.0947 115.003 16.499C113.723 16.8809 112.387 17.1953 110.994 17.4424C109.624 17.6895 108.288 17.959 106.985 18.251C107.007 18.8574 107.007 19.5088 106.985 20.2051C106.962 20.8789 106.884 21.564 106.749 22.2603C106.637 22.9341 106.457 23.5967 106.21 24.248C105.985 24.8994 105.671 25.5059 105.267 26.0674C104.817 26.0449 104.346 26.0898 103.852 26.2021C103.38 26.3145 102.953 26.4268 102.571 26.5391C102.392 26.4268 102.212 26.3145 102.032 26.2021C101.875 26.1123 101.673 26.0562 101.426 26.0337C101.493 25.7642 101.426 25.4834 101.224 25.1914C101.044 24.8994 100.853 24.6187 100.651 24.3491C100.471 24.0571 100.348 23.7764 100.28 23.5068C100.235 23.2148 100.37 22.9565 100.685 22.7319C100.505 22.5747 100.415 22.3276 100.415 21.9907C100.505 22.0806 100.617 22.1255 100.752 22.1255C100.707 21.7212 100.752 21.2383 100.887 20.6768C101.044 20.1152 101.167 19.5649 101.257 19.0259C101.37 18.4644 101.392 17.959 101.325 17.5098C101.257 17.0381 100.988 16.7012 100.516 16.499ZM109.276 8.61523C109.186 8.8623 109.107 9.08691 109.04 9.28906C108.995 9.46875 108.939 9.63721 108.872 9.79443C108.804 9.95166 108.726 10.1089 108.636 10.2661C108.568 10.4233 108.49 10.603 108.4 10.8052C108.445 10.9399 108.535 11.041 108.669 11.1084C108.804 11.1758 108.894 11.2769 108.939 11.4116C109.253 11.2544 109.568 11.1421 109.882 11.0747C110.197 10.9849 110.511 10.9175 110.826 10.8726C111.14 10.8276 111.455 10.7715 111.769 10.7041C112.083 10.6367 112.409 10.5244 112.746 10.3672C113.083 10.21 113.431 10.0864 113.791 9.99658C114.172 9.88428 114.543 9.77197 114.902 9.65967C115.262 9.54736 115.61 9.42383 115.947 9.28906C116.284 9.13184 116.576 8.92969 116.823 8.68262C116.508 8.39062 116.037 8.13232 115.408 7.90771C114.779 7.68311 114.094 7.54834 113.353 7.50342C112.634 7.43604 111.904 7.48096 111.163 7.63818C110.444 7.79541 109.815 8.12109 109.276 8.61523Z\",\n    fill: \"#303030\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M139.868 7.03174C139.89 7.18896 139.89 7.3125 139.868 7.40234C139.868 7.46973 139.856 7.53711 139.834 7.60449C139.834 7.67188 139.834 7.75049 139.834 7.84033C139.834 7.90771 139.856 8.02002 139.901 8.17725C139.43 8.94092 138.879 9.46875 138.25 9.76074C137.644 10.0303 136.981 10.2324 136.263 10.3672C135.544 10.4795 134.803 10.603 134.039 10.7378C133.298 10.8726 132.557 11.1646 131.815 11.6138C131.523 11.5015 131.254 11.5015 131.007 11.6138C130.782 11.7261 130.445 11.7598 129.996 11.7148C129.861 11.8496 129.693 11.9507 129.491 12.0181C129.289 12.063 129.086 12.1191 128.884 12.1865C128.974 12.3887 129.008 12.6021 128.985 12.8267C128.985 13.0288 129.019 13.1973 129.086 13.332C129.873 13.3994 130.737 13.3882 131.681 13.2983C132.646 13.2085 133.59 13.1523 134.511 13.1299C134.533 13.2422 134.522 13.3208 134.477 13.3657C134.432 13.3882 134.421 13.4443 134.443 13.5342C134.601 13.6465 134.758 13.7925 134.915 13.9722C135.072 14.1294 135.229 14.2866 135.387 14.4438C135.544 14.6011 135.701 14.7358 135.858 14.8481C136.038 14.938 136.24 14.9717 136.465 14.9492C136.555 15.1289 136.611 15.3311 136.633 15.5557C136.678 15.7578 136.656 15.9712 136.566 16.1958C136.207 16.4429 135.847 16.7012 135.488 16.9707C135.128 17.2178 134.747 17.4424 134.342 17.6445C133.96 17.8467 133.545 18.0151 133.096 18.1499C132.669 18.2622 132.186 18.3071 131.647 18.2847C131.535 18.2847 131.445 18.2847 131.377 18.2847C131.333 18.2847 131.265 18.251 131.175 18.1836C130.996 18.2959 130.737 18.3296 130.4 18.2847C130.086 18.2397 129.839 18.2734 129.659 18.3857C129.412 18.2734 129.109 18.2285 128.75 18.251C128.413 18.251 128.109 18.2061 127.84 18.1162C127.48 18.5879 127.155 19.0933 126.863 19.6323C126.571 20.1714 126.312 20.7441 126.088 21.3506C126.852 21.4629 127.48 21.5078 127.975 21.4854C128.491 21.4629 128.974 21.4292 129.423 21.3843C129.873 21.3169 130.333 21.2607 130.805 21.2158C131.276 21.1484 131.872 21.126 132.59 21.1484C133.04 20.9014 133.567 20.7441 134.174 20.6768C134.803 20.5869 135.375 20.4521 135.892 20.2725C136.072 20.3398 136.229 20.4634 136.364 20.6431C136.499 20.8003 136.622 20.9575 136.734 21.1147C136.869 21.2495 137.004 21.373 137.139 21.4854C137.273 21.5977 137.442 21.6426 137.644 21.6201C137.734 21.71 137.79 21.8223 137.812 21.957C137.857 22.0693 137.891 22.1816 137.914 22.2939C137.936 22.4062 137.97 22.5073 138.015 22.5972C138.082 22.6646 138.183 22.687 138.318 22.6646C137.981 23.4058 137.588 23.9785 137.139 24.3828C136.712 24.7646 136.218 25.0566 135.656 25.2588C135.095 25.4609 134.466 25.6182 133.77 25.7305C133.096 25.8428 132.343 25.9775 131.512 26.1348C131.31 26.1797 131.142 26.1685 131.007 26.1011C130.872 26.0562 130.715 26.0337 130.535 26.0337C130.019 26.146 129.401 26.2471 128.682 26.3369C127.963 26.4268 127.233 26.4604 126.492 26.438C125.751 26.4155 125.043 26.3145 124.37 26.1348C123.696 25.9775 123.146 25.6855 122.719 25.2588C122.539 25.1016 122.416 24.9219 122.348 24.7197C122.303 24.4951 122.157 24.3267 121.91 24.2144C121.888 23.9224 121.843 23.5967 121.775 23.2373C121.708 22.8779 121.641 22.5073 121.573 22.1255C121.506 21.7212 121.45 21.3281 121.405 20.9463C121.382 20.5645 121.405 20.2163 121.472 19.9019C121.54 19.5649 121.674 19.2617 121.876 18.9922C122.101 18.7227 122.18 18.4307 122.112 18.1162C122.225 18.0938 122.292 18.0376 122.314 17.9478C122.337 17.8354 122.427 17.7905 122.584 17.813C122.719 17.4087 122.865 17.0269 123.022 16.6675C123.179 16.3081 123.336 15.96 123.494 15.623C123.673 15.2861 123.842 14.9492 123.999 14.6123C124.179 14.2529 124.347 13.8599 124.504 13.4331C124.19 13.1411 123.954 12.8267 123.797 12.4897C123.662 12.1304 123.561 11.7822 123.494 11.4453C123.426 11.0859 123.37 10.7266 123.325 10.3672C123.28 9.98535 123.202 9.60352 123.089 9.22168C123.314 8.88477 123.583 8.61523 123.898 8.41309C124.235 8.18848 124.594 8.00879 124.976 7.87402C125.358 7.73926 125.773 7.62695 126.223 7.53711C126.672 7.44727 127.144 7.34619 127.638 7.23389C128.536 6.94189 129.333 6.71729 130.03 6.56006C130.749 6.40283 131.445 6.2793 132.119 6.18945C132.815 6.07715 133.534 5.97607 134.275 5.88623C135.016 5.79639 135.858 5.66162 136.802 5.48193C137.004 5.68408 137.195 5.78516 137.375 5.78516C137.464 5.58301 137.565 5.52686 137.678 5.6167C137.812 5.68408 137.869 5.6167 137.846 5.41455C138.071 5.79639 138.352 6.12207 138.688 6.3916C139.048 6.63867 139.441 6.85205 139.868 7.03174Z\",\n    fill: \"#303030\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M158.229 9.79443C157.668 9.79443 157.062 9.83936 156.41 9.9292C155.759 9.99658 155.119 10.0752 154.49 10.165C154.041 10.2324 153.603 10.2886 153.176 10.3335C152.771 10.3784 152.401 10.4121 152.064 10.4346C151.907 10.9287 151.75 11.3667 151.592 11.7485C151.435 12.1304 151.267 12.501 151.087 12.8604C150.907 13.2422 150.739 13.6353 150.582 14.0396C150.447 14.4214 150.312 14.8369 150.177 15.2861C149.953 15.6455 149.762 15.9824 149.604 16.2969C149.47 16.5889 149.357 16.9258 149.268 17.3076C148.998 17.6445 148.796 18.0039 148.661 18.3857C148.526 18.7451 148.425 19.0596 148.358 19.3291L148.223 19.7334C148.088 19.8682 148.01 19.9805 147.987 20.0703C147.965 20.1377 147.909 20.2051 147.819 20.2725C147.796 20.5195 147.718 20.7666 147.583 21.0137C147.538 21.126 147.504 21.2383 147.482 21.3506C147.459 21.4404 147.448 21.5078 147.448 21.5527C147.448 21.7773 147.392 21.9233 147.28 21.9907C147.302 22.103 147.302 22.2266 147.28 22.3613C147.257 22.4736 147.235 22.5859 147.212 22.6982C147.145 22.9678 147.123 23.1812 147.145 23.3384C147.212 23.4282 147.269 23.5068 147.313 23.5742C147.381 23.6416 147.426 23.7314 147.448 23.8438C147.583 23.9336 147.684 23.9897 147.751 24.0122C147.841 24.0796 147.976 24.1582 148.156 24.248L148.459 24.585C148.571 25.2363 148.47 25.7529 148.156 26.1348C147.819 26.5615 147.246 26.7749 146.438 26.7749H146.033C145.921 26.6626 145.854 26.5728 145.831 26.5054C145.651 26.438 145.505 26.3818 145.393 26.3369C145.281 26.292 145.18 26.2021 145.09 26.0674C144.798 25.9326 144.562 25.8203 144.382 25.7305L144.079 25.562C144.079 25.3149 144.079 25.1802 144.079 25.1577C143.922 24.9556 143.798 24.731 143.708 24.4839C143.641 24.2368 143.585 23.9897 143.54 23.7427C143.495 23.5405 143.439 23.3496 143.372 23.1699C143.327 22.9902 143.259 22.833 143.169 22.6982C143.125 21.3955 143.248 20.2949 143.54 19.3965C143.832 18.498 144.135 17.6333 144.45 16.8022C144.629 16.353 144.809 15.9038 144.989 15.4546C145.168 14.9829 145.326 14.5 145.46 14.0059L145.764 13.6689C145.921 13.3096 146.044 13.0176 146.134 12.793C146.247 12.5459 146.359 12.2988 146.471 12.0518C146.539 11.8945 146.595 11.7485 146.64 11.6138C146.707 11.4565 146.763 11.3218 146.808 11.2095C146.673 11.2095 146.55 11.2207 146.438 11.2432C146.325 11.2432 146.213 11.2544 146.101 11.2769C145.966 11.2993 145.842 11.3218 145.73 11.3442C145.618 11.3442 145.505 11.3442 145.393 11.3442C145.236 11.3442 145.124 11.333 145.056 11.3105C144.809 11.4229 144.54 11.479 144.248 11.479H143.911C143.843 11.479 143.776 11.479 143.708 11.479C143.664 11.4565 143.619 11.4453 143.574 11.4453C143.349 11.4453 143.169 11.479 143.035 11.5464C142.765 11.5464 142.507 11.5464 142.26 11.5464H141.923C141.878 11.5464 141.822 11.5576 141.754 11.5801C141.687 11.5801 141.631 11.5801 141.586 11.5801C141.429 11.5801 141.26 11.5688 141.081 11.5464C140.901 11.5015 140.71 11.4229 140.508 11.3105C140.238 10.9512 140.059 10.7603 139.969 10.7378L139.666 10.3335C139.643 10.1987 139.609 10.0752 139.564 9.96289C139.52 9.82812 139.475 9.68213 139.43 9.5249C139.34 9.30029 139.25 9.06445 139.16 8.81738C139.093 8.54785 139.059 8.2334 139.059 7.87402C139.082 7.69434 139.126 7.55957 139.194 7.46973C139.261 7.37988 139.317 7.30127 139.362 7.23389L139.463 6.72852L139.901 6.76221H140.845C141.563 6.76221 142.293 6.73975 143.035 6.69482C143.776 6.62744 144.54 6.56006 145.326 6.49268C145.775 6.44775 146.224 6.40283 146.673 6.35791C147.145 6.31299 147.628 6.26807 148.122 6.22314C148.212 6.021 148.302 5.83008 148.392 5.65039L148.729 5.48193C149.133 5.45947 149.414 5.51562 149.571 5.65039C149.75 5.7627 149.896 5.875 150.009 5.9873C150.503 5.94238 150.997 5.89746 151.491 5.85254C152.008 5.78516 152.524 5.70654 153.041 5.6167C153.805 5.50439 154.568 5.40332 155.332 5.31348C156.118 5.22363 156.871 5.17871 157.589 5.17871C157.904 5.17871 158.207 5.18994 158.499 5.2124C158.791 5.23486 159.061 5.26855 159.308 5.31348L159.645 5.54932C159.712 5.68408 159.802 5.80762 159.914 5.91992C160.049 6.03223 160.184 6.14453 160.318 6.25684C160.588 6.50391 160.857 6.7959 161.127 7.13281C161.396 7.46973 161.498 7.96387 161.43 8.61523C161.25 8.88477 161.116 9.04199 161.026 9.08691L160.723 9.49121L160.386 9.45752C160.251 9.45752 160.127 9.47998 160.015 9.5249C159.903 9.54736 159.791 9.58105 159.678 9.62598C159.588 9.6709 159.499 9.71582 159.409 9.76074C159.319 9.7832 159.218 9.80566 159.105 9.82812C158.903 9.82812 158.735 9.82812 158.6 9.82812C158.488 9.80566 158.364 9.79443 158.229 9.79443Z\",\n    fill: \"#303030\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M30.4496 10.9824C32.3581 11.8724 34.7358 10.8274 35.7497 8.65297L35.8016 8.54184C36.785 6.43449 37.3651 5.19128 35.4893 4.31658C35.0379 4.11615 34.5347 3.95308 34.0111 3.83914L33.9885 3.81649L33.9383 3.82365C31.9211 3.40375 29.6245 3.71591 28.8275 5.42509C27.8136 7.59952 28.5412 10.0925 30.4496 10.9824ZM30.0382 6.51068C30.628 6.25298 31.4448 6.1077 32.4885 6.31644C33.3864 6.49602 34.1163 6.48076 34.6783 6.37926C34.7183 6.90196 34.6207 7.46801 34.3685 8.00889C33.7098 9.42159 32.2405 10.1359 31.0937 9.60116C30.0652 9.12158 29.6399 7.79773 30.0382 6.51068Z\",\n    fill: \"#FFC107\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M25.6835 10.2037C25.0124 10.8895 24.1494 11.2327 23.2531 11.1702C22.9622 11.1502 22.3164 10.828 21.9029 10.6216C21.7962 10.5683 21.7049 10.5228 21.6392 10.4921C20.3853 9.90741 20.131 8.8691 20.2424 7.24186C20.3848 5.19854 21.9651 3.63863 23.7655 3.76356C24.6081 3.82131 25.0585 4.43394 25.584 5.14891L25.5847 5.14983C25.6173 5.19418 25.6502 5.23891 25.6835 5.28393C25.7364 5.35554 25.79 5.4269 25.8436 5.49827C26.3399 6.15869 26.8369 6.82013 26.7771 7.69234C26.7103 8.65926 26.3218 9.55101 25.6835 10.2037ZM23.6606 5.28395C22.6979 5.21716 21.8467 6.14268 21.7628 7.34675C21.6806 8.5505 22.397 9.58388 23.3589 9.64981C23.8019 9.68065 24.2407 9.49872 24.594 9.13773C24.9795 8.74382 25.2147 8.19339 25.2566 7.58763C25.2982 6.98215 25.1406 6.40438 24.8128 5.96109C24.6306 5.71439 24.4082 5.52905 24.1626 5.41453C24.0035 5.34034 23.8345 5.29588 23.6606 5.28395Z\",\n    fill: \"#FFC107\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M32.0291 12.4809C33.9937 13.397 35.339 15.2268 35.628 17.3754L36.3244 22.5525C36.4399 23.4118 36.2793 24.2669 35.8597 25.0257C35.4403 25.7844 34.8014 26.3754 34.0124 26.7345C33.2229 27.0935 32.3577 27.1869 31.5101 27.0046C31.2116 26.9402 30.9249 26.844 30.6542 26.7177C30.1562 26.4855 29.711 26.1518 29.3406 25.7299C27.905 24.0934 25.8388 23.1214 23.6643 23.0575L23.6077 23.0565C22.7407 23.0373 21.9207 22.7457 21.2362 22.2135C20.5518 21.6812 20.0672 20.9584 19.835 20.123C19.6031 19.2876 19.6453 18.4186 19.957 17.6097C20.2687 16.801 20.8205 16.1284 21.5528 15.6646L25.9665 12.8702C27.798 11.7104 30.0646 11.5649 32.0291 12.4809ZM34.7097 21.9811C32.313 21.0288 28.7733 20.3248 28.4843 23.0075C28.1354 22.7849 27.7724 22.5857 27.3979 22.4111C26.2311 21.867 24.9524 21.5616 23.6426 21.5326L23.6053 21.5319C22.5182 21.4924 21.5957 20.7662 21.3034 19.7152C21.032 18.7369 21.3729 17.7184 22.1557 17.1024C22.7217 16.7027 23.6547 16.5304 25.4888 17.3165C28.2888 18.5165 28.3222 16.8165 27.4888 15.8165C28.4887 15.8165 30.5885 15.5165 30.9888 14.3165C31.0653 14.0871 31.0822 13.8906 31.0546 13.7228C31.1658 13.765 31.276 13.8115 31.3849 13.8623C32.8765 14.5579 33.898 15.9471 34.1176 17.5785L34.7097 21.9811Z\",\n    fill: \"#FFC107\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M37.9653 15.3525C37.667 15.2134 37.389 15.0271 37.1409 14.7927C35.7356 13.4642 35.8207 11.0836 37.3307 9.48606C38.0461 8.72861 38.9773 8.25323 39.9529 8.14715C40.6253 8.07413 40.7755 8.31845 40.9991 8.68219C41.1149 8.87073 41.2505 9.09135 41.4888 9.31649C41.6891 9.50589 41.9543 9.69116 42.2293 9.88333C42.9124 10.3606 43.6564 10.8804 43.6185 11.6116C43.5678 12.5915 43.1455 13.5482 42.4295 14.3054C41.186 15.621 39.3571 16.0015 37.9653 15.3525ZM40.1176 9.66239C39.5018 9.72936 38.9055 10.0383 38.4383 10.5329C37.5056 11.5197 37.2921 13.4178 38.0866 14.1692C38.882 14.9207 40.1539 14.656 41.0866 13.6692C41.5542 13.1748 42.0644 12.1511 42.0965 11.5327C42.1261 10.9603 41.9399 10.4537 41.5721 10.1058C41.204 9.75793 40.6873 9.60041 40.1176 9.66239Z\",\n    fill: \"#FFC107\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M43.2831 17.9696C42.2077 16.3166 40.2877 16.3405 38.4889 17.3166C36.6909 18.2939 36.16 19.8345 37.0205 21.4202C37.3343 21.9988 37.8214 22.4326 38.401 22.7029C39.4112 23.1739 40.7026 23.1484 41.8472 22.5278C43.6452 21.5505 44.1436 19.5558 43.2831 17.9696ZM41.1202 21.1883C40.0583 21.7641 38.8204 21.5421 38.3601 20.6934C38.0229 20.072 38.1952 19.2836 38.7286 18.68C39.8068 18.4965 41.1708 18.3278 42.0608 18.3867C42.1161 18.4544 42.1655 18.5277 42.2082 18.6063C42.6675 19.4543 42.1793 20.6126 41.1202 21.1883Z\",\n    fill: \"#FFC107\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.6e2f51eeb062dc6472f5e4aa1de019f4.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"Logo_logo__ozAky\"};","import { Link } from 'react-router-dom';\nimport logo from '../../../images/logo/logo.svg';\nimport styles from './Logo.module.css';\n\nconst Logo = () => {\n  return (\n    <Link to=\"/main\" className={styles.logo}>\n      <img src={logo} alt=\"Logo\" />\n    </Link>\n  );\n};\n\nexport default Logo;\n","const BurgerMenuBtn = ({ btnStyle, btnIcon, handleClick }) => {\n  return (\n    <button type=\"button\" className={btnStyle} onClick={handleClick}>\n      <svg width={24} height={24}>\n        <use href={btnIcon}></use>\n      </svg>\n    </button>\n  );\n};\nexport default BurgerMenuBtn;\n","import { nanoid } from 'nanoid';\n\nconst navItems = [\n  {\n    id: nanoid(),\n    text: 'News',\n    link: '/news',\n  },\n  {\n    id: nanoid(),\n    text: 'Find pet',\n    link: '/notices/sell',\n  },\n  {\n    id: nanoid(),\n    text: 'Our friends',\n    link: '/friends',\n  },\n];\n\nexport default navItems;\n","import { NavLink } from 'react-router-dom';\nimport navItems from './navItems';\n\nconst Navigation = ({ navListStyle, navLinkStyle }) => {\n  const elements = navItems.map(({ id, text, link }) => (\n    <li key={id}>\n      <NavLink className={navLinkStyle} to={link}>\n        {text}\n      </NavLink>\n    </li>\n  ));\n  return (\n    <nav>\n      <ul className={navListStyle}>{elements}</ul>\n    </nav>\n  );\n};\nexport default Navigation;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getUser, getUserEmail } from 'redux/auth/auth-selectors';\nimport sprite from '../../../images/icons/sprite.svg';\n\nconst UserNavigation = ({ userNameStyle, userIconContainer }) => {\n  const [name, setName] = useState('');\n  const user = useSelector(getUser);\n  const userEmail = useSelector(getUserEmail);\n  useEffect(() => {\n    const infoUser = () => {\n      if (!!user) {\n        return setName(user);\n      } else if (!!userEmail) {\n        return setName(userEmail);\n      }\n      return;\n    };\n    infoUser();\n  }, [user, userEmail]);\n\n  return (\n    <NavLink to={'/user'} className={userIconContainer}>\n      <svg width={28} height={28}>\n        <use href={sprite + '#user'}></use>\n      </svg>\n      <p className={userNameStyle}>{name}</p>\n    </NavLink>\n  );\n};\nexport default UserNavigation;\n","import sprite from '../../../images/icons/sprite.svg';\nimport css from './auth-navigation.module.css';\n\nconst PawIcon = () => {\n  return (\n    <svg width={24} height={24} className={css.iconPaw}>\n      <use href={sprite + '#paw-white'}></use>\n    </svg>\n  );\n};\n\nexport default PawIcon;\n","import { useNavigate } from 'react-router-dom';\nimport css from './auth-navigation.module.css';\nimport ButtonNav from 'shared/components/Button/ButtonNav';\nimport PawIcon from './PawIcon';\n\nconst AuthNavigation = ({ listStyle }) => {\n  const navigate = useNavigate();\n  return (\n    <ul className={listStyle}>\n      <li>\n        <ButtonNav\n          customStyle={css.loginBtn}\n          buttonName={'Log IN'}\n          buttonIcon={<PawIcon />}\n          type=\"button\"\n          onClick={() => navigate('/login')}\n        />\n      </li>\n      <li>\n        <ButtonNav\n          customStyle={css.registerBtn}\n          buttonName={'Registration'}\n          type=\"button\"\n          onClick={() => navigate('/register')}\n        />\n      </li>\n    </ul>\n  );\n};\nexport default AuthNavigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"menu-page_backdrop__1oNkd\",\"menuWrapper\":\"menu-page_menuWrapper__qaHGp\",\"menuHeader\":\"menu-page_menuHeader__KDfBZ\",\"navContainer\":\"menu-page_navContainer__17TxK\",\"btnListStyle\":\"menu-page_btnListStyle__NWLQ-\",\"userIconContainer\":\"menu-page_userIconContainer__ObbAw\",\"userName\":\"menu-page_userName__RyPHI\",\"navList\":\"menu-page_navList__P63Bd\",\"navLink\":\"menu-page_navLink__DgOh7\"};","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport AuthNavigation from 'modules/Navigation/AuthNavigation/AuthNavigation';\nimport UserNavigation from 'modules/Navigation/UserNavigation/UserNavigation';\nimport Navigation from 'modules/Navigation/Nav/Navigation';\nimport Logo from 'modules/Navigation/Logo/Logo';\nimport BurgerMenuBtn from 'modules/Navigation/BurgerMenuBtn/BurgerMenuBtn';\nimport { isUserLogin } from 'redux/auth/auth-selectors';\nimport sprite from '../../images/icons/sprite.svg';\nimport css from './menu-page.module.css';\n\nconst MenuPage = ({ close }) => {\n  const isLogin = useSelector(isUserLogin);\n\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  });\n  return (\n    <div className={css.backdrop} onClick={close}>\n      <div className={css.menuWrapper}>\n        <div className={css.menuHeader}>\n          <Logo />\n          <BurgerMenuBtn btnIcon={sprite + '#close'} handleClick={close} />\n        </div>\n        <div className={css.navContainer}>\n          {isLogin ? (\n            <UserNavigation\n              userIconContainer={css.userIconContainer}\n              userNameStyle={css.userName}\n            />\n          ) : (\n            <AuthNavigation listStyle={css.btnListStyle} />\n          )}\n          <Navigation navListStyle={css.navList} navLinkStyle={css.navLink} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuPage;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport css from './nav-container.module.css';\nimport sprite from '../../images/icons/sprite.svg';\nimport Logo from './Logo/index';\nimport BurgerMenuBtn from './BurgerMenuBtn/BurgerMenuBtn';\nimport Navigation from './Nav/Navigation';\nimport UserNavigation from './UserNavigation/UserNavigation';\nimport AuthNavigation from './AuthNavigation/AuthNavigation';\nimport MenuPage from 'pages/MenuPage/MenuPage';\nimport { isUserLogin } from 'redux/auth/auth-selectors';\n\nconst NavContainer = () => {\n  const [isShow, setIsShow] = useState(false);\n  const isLogin = useSelector(isUserLogin);\n\n  const openMenu = event => {\n    if (!event) return;\n    setIsShow(true);\n  };\n  const close = e => {\n    if (\n      e.target.nodeName === 'BUTTON' ||\n      e.target.nodeName === 'A' ||\n      e.currentTarget.nodeName === 'BUTTON'\n    ) {\n      setIsShow(false);\n    }\n  };\n  return (\n    <>\n      <div className={css.headerContainer}>\n        <Logo />\n        <div className={css.navContainer}>\n          <Navigation navListStyle={css.navList} navLinkStyle={css.navLink} />\n          {isLogin ? (\n            <UserNavigation\n              userIconContainer={css.userIconContainer}\n              userNameStyle={css.userName}\n            />\n          ) : (\n            <AuthNavigation listStyle={css.authNavList} />\n          )}\n          <BurgerMenuBtn\n            btnStyle={css.burgerMenu}\n            btnIcon={sprite + '#menu-hamburger'}\n            handleClick={openMenu}\n          />\n        </div>\n      </div>\n      {isShow && <MenuPage close={close} />}\n    </>\n  );\n};\nexport default NavContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"shared-layout_container__zzNGX\"};","import { Outlet } from 'react-router-dom';\nimport NavContainer from 'modules/Navigation/NavContainer';\nimport { getAuth } from 'redux/auth/auth-selectors';\nimport css from './shared-layout.module.css';\nimport { useSelector } from 'react-redux';\nimport Loader from 'shared/components/Loader/Loader';\nconst SharedLayout = () => {\n  const { isLoading,  } = useSelector(getAuth)\n  // console.log('isLogin', isLogin);\n\n  return (\n    <div className={css.container}>\n      <header>\n        <NavContainer />\n      </header>\n      <main>{isLoading ? <Loader /> : <Outlet />}</main>\n    </div>\n  );\n};\n\nexport default SharedLayout;\n","const ButtonNav = ({\n  customStyle,\n  buttonName,\n  buttonIcon,\n  type = 'button',\n  onClick,\n}) => {\n  return (\n    <>\n      <button className={customStyle} type={type} onClick={onClick}>\n        {buttonName}\n        {buttonIcon}\n      </button>\n    </>\n  );\n};\n\nexport default ButtonNav;\n","// extracted by mini-css-extract-plugin\nexport default {\"loginBtn\":\"auth-navigation_loginBtn__s2qiP\",\"registerBtn\":\"auth-navigation_registerBtn__gNQYi\",\"iconPaw\":\"auth-navigation_iconPaw__fqbqy\"};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["to","className","styles","src","logo","alt","btnStyle","btnIcon","handleClick","type","onClick","width","height","href","id","nanoid","text","link","navListStyle","navLinkStyle","elements","navItems","userNameStyle","userIconContainer","useState","name","setName","user","useSelector","getUser","userEmail","getUserEmail","useEffect","sprite","css","listStyle","navigate","useNavigate","ButtonNav","customStyle","buttonName","buttonIcon","close","isLogin","isUserLogin","document","body","style","overflow","isShow","setIsShow","event","e","target","nodeName","currentTarget","isLoading","getAuth","Loader","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}