{"version":3,"file":"static/js/17.ae0685ae.chunk.js","mappings":"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","sources":["modules/AuthForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","services/userValidation.js","webpack://your-pet-project-frontend/./src/shared/components/Button/Button.module.css?4d6c","shared/components/Button/Button.jsx","webpack://your-pet-project-frontend/./src/shared/components/Input/Input.module.css?122e","shared/components/Input/Input.jsx","webpack://your-pet-project-frontend/./src/modules/AuthForm/AuthForm.module.css?31dc"],"sourcesContent":["import { InputForm } from 'shared/components/Input';\nimport Button from 'shared/components/Button/Button';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport css from './AuthForm.module.css';\nimport { ErrorMessage, Formik, Form } from 'formik';\nimport { user } from 'services';\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch,   } from 'react-redux';\nimport { login } from 'redux/auth/auth-operations';\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = props => {\n  const navigate = useNavigate()\n  const [isError, setIsError] = useState(null); \n  const [passwordShow, setPasswordShow] = useState(false);\n\n  const dispatch = useDispatch();\n  const handleSubmit = async (values, { resetForm }) => {\n    dispatch(login(values));\n    const { error } = await login(values);\n    if (error) {\n      setIsError({\n        message: error.data.message,\n        additionalInfo: error.data.additionalInfo,\n      });\n      resetForm();\n    } else {\n      navigate('/notices');\n      // console.log('navigate to ...');\n    }\n  };\n\n \n\n  const togglePassword = () => setPasswordShow(prevState => !prevState);\n\n  return (\n    <>\n      \n        <div className={css.container}>\n          <Formik\n            validationSchema={user.loginValidationSchema}\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n          >\n            <Form className={css.form}>\n              <h2 className={css.title}>{props.title}</h2>\n              <div className={css.input__wrapper}>\n                <InputForm\n                  autofocus=\"autofocus\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  autoComplete=\"off\"\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"p\"\n                  className={css.error}\n                />\n              </div>\n              <div className={css.input__wrapper_last}>\n                <InputForm\n                  name=\"password\"\n                  type={passwordShow ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  autoComplete=\"off\"\n                />\n                <span\n                  id=\"visibilityBtn\"\n                  className={css.IconPassword}\n                  onClick={togglePassword}\n                >\n                  {passwordShow ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                </span>\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"p\"\n                  className={css.error__password}\n                />\n              </div>\n\n              <Button\n                type=\"submit\"\n                className={css.button__auth}\n                buttonName={'Login'}\n              ></Button>\n\n              {isError && <p className={css.error__login}>{isError.message}</p>}\n              {isError && (\n                <p className={css.error__login}>{isError.additionalInfo}</p>\n              )}\n\n              <p className={css.redirect__auth}>\n                {'Don`t have an account?'}\n                <Link to=\"/register\" className={css.redirect_link__auth}>\n                  {'Register'}\n                </Link>\n              </p>\n            </Form>\n          </Formik>\n        </div>\n     \n    </>\n  );\n};\nexport default LoginForm;\n","import LoginForm from 'modules/AuthForm/LoginForm';\n// import Loader from 'shared/components/Loader/Loader';\nconst LoginPage = () => {\n  return (\n    <div>\n      {/* <Loader/> */}\n      <LoginForm title={'Login'} />\n    </div>\n  );\n};\nexport default LoginPage;\n","import * as Yup from 'yup';\n\nconst stepOneValidationSchema = Yup.object({\n  email: Yup.string()\n    .required('Email is required')\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      'Correct format: mail@ukr.net'\n    )\n    .test(\n      'is-valid',\n      message => `${message.path} is invalid`,\n      (value, ctx) => {\n        if (value) {\n          if (value.substr(-2, 2) === 'ru') {\n            return ctx.createError({\n              message: 'russia is a terorist state',\n            });\n          }\n        }\n        return true;\n      }\n    ),\n  password: Yup.string().required('Password is required').min(7),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Confirm password is required'),\n});\n\nconst stepTwoValidationSchema = Yup.object({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(70, 'Too Long!')\n    .required('Name is required')\n    .label('Name')\n    .matches(/^[a-zA-Z]+$/, 'In Latin letters'),\n  city: Yup.string()\n    .label('City')\n    .required('City, region is required')\n    .matches(/^[?!,.a-zA-Z0-9\\s]+$/, 'In Latin letters'),\n  phone: Yup.string()\n    .required('Mobile phone is required')\n    .label('Mobile phone')\n    .matches(/^\\+380\\d{9}$/, 'Correct format: +380981234567'),\n});\n\nconst loginValidationSchema = Yup.object({\n  email: Yup.string()\n    .required('Email is required')\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      'Correct format: mail@ukr.net'\n    )\n    .test(\n      'is-valid',\n      message => `${message.path} is invalid`,\n      (value, ctx) => {\n        if (value) {\n          if (value.substr(-2, 2) === 'ru') {\n            return ctx.createError({\n              message: 'russia is a terorist state',\n            });\n          }\n        }\n        return true;\n      }\n    ),\n  password: Yup.string().required('Password is required'),\n});\n\nconst emailValidationSchema = Yup.object({\n  email: Yup.string()\n    .required('Email is required')\n    .matches(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      'Correct format: mail@ukr.net'\n    )\n    .test(\n      'is-valid',\n      message => `${message.path} is invalid`,\n      (value, ctx) => {\n        if (value) {\n          if (value.substr(-2, 2) === 'ru') {\n            return ctx.createError({\n              message: 'russia is a terorist state',\n            });\n          }\n        }\n        return true;\n      }\n    ),\n});\n\nconst passwordValidationSchema = Yup.object({\n  password: Yup.string().required('Password is required').min(7),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Confirm password is required'),\n});\n\nexport {\n  stepOneValidationSchema,\n  stepTwoValidationSchema,\n  loginValidationSchema,\n  emailValidationSchema,\n  passwordValidationSchema,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__urlvE\",\"button__auth_first\":\"Button_button__auth_first__ibYGO\",\"button__auth_last\":\"Button_button__auth_last__DhPyU\",\"botton__learn_more_mobile\":\"Button_botton__learn_more_mobile__mlIle\"};","import css from './Button.module.css';\n\nconst Button = ({ customStyle, buttonName, buttonIcon, type = 'button', onClick }) => {\n  return (\n    <>\n      <button className={css.button + ' ' + customStyle} type={type} onClick={onClick}>\n        {buttonName}\n        {buttonIcon}\n      </button>\n    </>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__2SVdu\",\"InputNews\":\"Input_InputNews__qcZeF\"};","import { Field } from 'formik';\nimport css from './Input.module.css';\n\nconst InputForm = ({\n\ttype = 'text',\n\tname,\n\tcustomStyle,\n\tplaceholder,\n\tautofocus,\n\tautoComplete,\n\tas\n\t}) => {\n\treturn (\n\t\t<Field\n\t\t\tclassName={`${css.input} ${customStyle}`}\n\t\t\tname={name}\n\t\t\ttype={type}\n\t\t\tplaceholder={placeholder}\n\t\t\tautoFocus={autofocus}\n\t\t\tautoComplete={autoComplete}\n\t\t\tas={as}\n\t\t/>\n\t);\n};\n\nconst Input = ({\n\ttype = 'text',\n\tname,\n\tid,\n\tlabel,\n\tcustomStyle,\n\tplaceholder,\n\tvalue,\n\tonChange,\n\tonBlur,\n}) => {\n\treturn (\n\t\t<label>\n\t\t\t{label}\n\t\t\t<input\n\t\t\t\tclassName={`${css.input} ${customStyle}`}\n\t\t\t\ttype={type}\n\t\t\t\tid={id}\n\t\t\t\tname={name}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tonChange={onChange}\n\t\t\t\tonBlur={onBlur}\n\t\t\t\tvalue={value}\n\t\t\t/>\n\t\t</label>\n\t);\n};\n\nexport { Input, InputForm };\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AuthForm_container__TRNvn\",\"form\":\"AuthForm_form__+kOAL\",\"title\":\"AuthForm_title__Err7k\",\"button__container\":\"AuthForm_button__container__Ty8Kg\",\"redirect__auth\":\"AuthForm_redirect__auth__PoyHw\",\"redirect_link__auth\":\"AuthForm_redirect_link__auth__oDDxY\",\"input__wrapper\":\"AuthForm_input__wrapper__WAgX4\",\"input__wrapper_last\":\"AuthForm_input__wrapper_last__PgMz9\",\"IconPassword\":\"AuthForm_IconPassword__06FVd\",\"error\":\"AuthForm_error__3P1ri\",\"error__password\":\"AuthForm_error__password__cavNi\",\"error__login\":\"AuthForm_error__login__ILaX-\"};"],"names":["initialValues","email","password","props","navigate","useNavigate","useState","isError","setIsError","passwordShow","setPasswordShow","dispatch","useDispatch","handleSubmit","values","resetForm","login","error","message","data","additionalInfo","className","css","validationSchema","user","onSubmit","title","Input","autofocus","name","type","placeholder","autoComplete","component","id","onClick","prevState","Visibility","VisibilityOff","Button","buttonName","to","stepOneValidationSchema","Yup","required","matches","test","path","value","ctx","substr","createError","min","confirmPassword","oneOf","loginValidationSchema","max","label","city","phone","customStyle","buttonIcon","InputForm","as","autoFocus"],"sourceRoot":""}